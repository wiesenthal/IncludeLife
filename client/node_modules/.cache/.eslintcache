[{"/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/index.js":"1","/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/App.js":"2","/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/reportWebVitals.js":"3"},{"size":535,"mtime":1662328000950,"results":"4","hashOfConfig":"5"},{"size":3311,"mtime":1664142715043,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1662328000950,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4i2ppg",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/index.js",[],[],"/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/App.js",["18"],[],"// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport jwtDecode from 'jwt-decode';\n\n// import { googleAuthenticator } from './auth.js';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n\nfunction Item(props) {\n  const [checked, setChecked] = React.useState(false);\n  function check() {\n    console.log(\"checked\", checked);\n    if (!checked) {\n      fetch(\"/inclusion-done\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({inclusion_name: props.text, user: props.user})\n      }).then(() => {\n        props.update();\n        setTimeout(() => {setChecked(false)}, 1000);\n      });\n    }\n    setChecked(!checked);\n  }\n  return <div class=\"flex\">\n      <input type=\"checkbox\" checked={checked} onChange={check}/>\n      <span style={{fontWeight: \"bold\"}}>{props.text}</span>\n      {props.show_count? <span style={{color: \"grey\"}}>: {props.done_count}</span> : null}\n    </div>\n}\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n  const [updateCount, setUpdateCount] = React.useState(0);\n  const [showCount, setShowCount] = React.useState(false);\n  const [user, setUser] = React.useState(getWindowEmail());\n\n  function getWindowEmail() {\n    return window.localStorage.getItem('user');\n  }\n  \n  function setWindowEmail(email) {\n    window.localStorage.setItem('user', email);\n    setUser(email);\n  }\n\n  function getTotalDoneCount() {\n    return data.reduce((total, inclusion) => total + inclusion.done_count, 0);\n  }\n  function calcProportionDifference(inclusion) {\n    let actualProportion = inclusion.done_count / getTotalDoneCount();\n    return actualProportion - inclusion.expected_proportion;\n  }\n  function getOrder() {\n    let d = [...data].sort((a, b) => calcProportionDifference(a) - calcProportionDifference(b));\n    return d.map(inclusion => inclusion.name);\n  }\n  function signIn(credentialResponse) {\n    console.log(credentialResponse);\n    let user = jwtDecode(credentialResponse.credential);\n    console.log(user.email);\n    setWindowEmail(user.email);\n  }\n\n  React.useEffect(() => {\n    if (user) {\n      fetch(`/get-data?user=${user}`)\n          .then((res) => res.json())\n          .then((data) => {\n            setData(data.inclusions)\n          });\n    }\n  }, [user]);\n  if (user && !data) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <GoogleOAuthProvider\n    clientId={\"372222793571-7dvefc1ekrb83a4eifl7r222uqh4va5m.apps.googleusercontent.com\"}\n    >\n    <div className=\"App\">\n    {user ? null : <GoogleLogin\n          onSuccess={signIn}\n          onError={error => console.log(error)}\n          useOneTap\n          auto_select\n      />}\n      {!user ? null :\n      <div>\n      <div id=\"list\">\n        {getOrder().map(inclusion => \n          <Item \n          key={inclusion}\n          text={inclusion}\n          done_count={data.find(inclusionObj => inclusionObj.name === inclusion).done_count}\n          show_count = {showCount}\n          update={() => setUpdateCount(updateCount + 1)}\n          user={user}/>\n        )}\n      </div>\n      <button onClick={() => setShowCount(!showCount)}>Toggle Count Visibility</button>\n      </div>\n      }\n    </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;","/Users/miles/Documents/github/lifestyleLayout/LifeInclusions/client/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":4,"column":8,"nodeType":"21","messageId":"22","endLine":4,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]